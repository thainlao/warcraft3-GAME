{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\wc3project\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport alchemist from '../img/alchemist.png';\nimport archimag from '../img/archimag.png';\nimport blademaster from '../img/blademaster.png';\nimport bloodmage from '../img/bloodmage.png';\nimport demonhanter from '../img/demonhanter.png';\nimport drowranger from '../img/drowranger.png';\nimport flamebeard from '../img/flamebeard.png';\nimport hunters from '../img/huntres.png';\nimport troll from '../sounds/Лесной троль.mp3';\nimport Acolyte from '../sounds/Acolyte.mp3';\nimport Captain from '../sounds/Captain.mp3';\nimport Kern from '../sounds/Kern.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageInfo = [{\n  image: alchemist,\n  sound: troll\n}, {\n  image: archimag,\n  sound: Acolyte\n}, {\n  image: blademaster,\n  sound: Captain\n}, {\n  image: bloodmage,\n  sound: Kern\n}];\nfunction Game() {\n  _s();\n  const [randomImages, setRandomImages] = useState([]);\n  const handlePlay = () => {\n    const shuffledImages = shuffleArray(imageInfo);\n    const selectedImages = shuffledImages.slice(0, 4);\n    setRandomImages(selectedImages);\n  };\n  const shuffleArray = array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n  const updatedImageInfo = imageInfo.map(item => {\n    return {\n      ...item,\n      true: item.sound\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlay,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-row flex\",\n      children: randomImages.map((item, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: item.sound\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"QipNs+vFX6v4A33kALiQeVsF2QM=\");\n_c = Game;\n;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","alchemist","archimag","blademaster","bloodmage","demonhanter","drowranger","flamebeard","hunters","troll","Acolyte","Captain","Kern","jsxDEV","_jsxDEV","imageInfo","image","sound","Game","_s","randomImages","setRandomImages","handlePlay","shuffledImages","shuffleArray","selectedImages","slice","array","shuffled","i","length","j","Math","floor","random","updatedImageInfo","map","item","true","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/sasha/OneDrive/Рабочий стол/wc3project/src/components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport alchemist from '../img/alchemist.png';\r\nimport archimag from '../img/archimag.png';\r\nimport blademaster from '../img/blademaster.png';\r\nimport bloodmage from '../img/bloodmage.png';\r\nimport demonhanter from '../img/demonhanter.png';\r\nimport drowranger from '../img/drowranger.png';\r\nimport flamebeard from '../img/flamebeard.png';\r\nimport hunters from '../img/huntres.png';\r\nimport troll from '../sounds/Лесной троль.mp3';\r\nimport Acolyte from '../sounds/Acolyte.mp3';\r\nimport Captain from '../sounds/Captain.mp3';\r\nimport Kern from '../sounds/Kern.mp3';\r\n\r\nconst imageInfo = [\r\n  { image: alchemist, sound: troll },\r\n  { image: archimag, sound: Acolyte },\r\n  { image: blademaster, sound: Captain },\r\n  { image: bloodmage, sound: Kern },\r\n];\r\n\r\nfunction Game () {\r\n\r\n  const [randomImages, setRandomImages] = useState([]);\r\n\r\n  const handlePlay = () => {\r\n    const shuffledImages = shuffleArray(imageInfo);\r\n    const selectedImages = shuffledImages.slice(0, 4);\r\n    setRandomImages(selectedImages);\r\n  };\r\n\r\n  const shuffleArray = (array) => {\r\n    const shuffled = [...array];\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled;\r\n  };\r\n\r\n  const updatedImageInfo = imageInfo.map((item) => {\r\n    return { ...item, true: item.sound };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handlePlay}>Play</button>\r\n      <div className=\"image-row flex\">\r\n        {randomImages.map((item, index) => (\r\n          <img key={index} src={item.image} alt={item.sound} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}