{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\wc3project\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport images from '../img';\nimport sounds from '../sounds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Функция для получения четырех случайных картинок\n  const getRandomImages = () => {\n    const shuffledImages = [...images].sort(() => 0.5 - Math.random());\n    return shuffledImages.slice(0, 4);\n  };\n\n  // Функция для выбора правильного звука, соответствующего картинке\n  const getCorrectSound = image => {\n    switch (image) {\n      case 'alchemist':\n        return sounds[1];\n      case 'huntres':\n        return sounds[2];\n      case 'driwranger':\n        return sounds[3];\n      default:\n        return null;\n    }\n  };\n  const handleImageClick = image => {\n    if (selectedImage === image) {\n      setScore(score + 1);\n      setSelectedImage(null);\n    } else {\n      setGameOver(true);\n    }\n  };\n\n  // Обработчик нажатия на кнопку \"Старт\"\n  const handleStartClick = () => {\n    const randomImages = getRandomImages();\n    const randomSound = getCorrectSound(randomImages[0]);\n    setSelectedImage(randomImages[0]);\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0418\\u0433\\u0440\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0435\\u043D\\u0430!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartClick,\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443, \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0449\\u0443\\u044E \\u0437\\u0432\\u0443\\u043A\\u0443:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"images-container\",\n        children: [selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`./img/${selectedImage}.png`).default,\n          alt: selectedImage,\n          onClick: () => handleImageClick(selectedImage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), getRandomImages().map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`./img/${image}.png`).default,\n          alt: image,\n          onClick: () => handleImageClick(image)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0421\\u0447\\u0435\\u0442: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"XlUrU432C3PajTU7ThAHocIgPQQ=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["images","sounds","jsxDEV","_jsxDEV","Game","_s","score","setScore","useState","selectedImage","setSelectedImage","gameOver","setGameOver","getRandomImages","shuffledImages","sort","Math","random","slice","getCorrectSound","image","handleImageClick","handleStartClick","randomImages","randomSound","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","require","default","alt","map","index","_c","$RefreshReg$"],"sources":["C:/Users/sasha/OneDrive/Рабочий стол/wc3project/src/components/Game.jsx"],"sourcesContent":["import images from '../img';\r\nimport sounds from '../sounds';\r\n\r\nconst Game = () => {\r\n    const [score, setScore] = useState(0);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n  \r\n    // Функция для получения четырех случайных картинок\r\n    const getRandomImages = () => {\r\n      const shuffledImages = [...images].sort(() => 0.5 - Math.random());\r\n      return shuffledImages.slice(0, 4);\r\n    };\r\n  \r\n    // Функция для выбора правильного звука, соответствующего картинке\r\n    const getCorrectSound = (image) => {\r\n      switch (image) {\r\n        case 'alchemist':\r\n          return sounds[1];\r\n        case 'huntres':\r\n          return sounds[2];\r\n        case 'driwranger':\r\n          return sounds[3];\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n\r\n    const handleImageClick = (image) => {\r\n        if (selectedImage === image) {\r\n          setScore(score + 1);\r\n          setSelectedImage(null);\r\n        } else {\r\n          setGameOver(true);\r\n        }\r\n      };\r\n    \r\n      // Обработчик нажатия на кнопку \"Старт\"\r\n      const handleStartClick = () => {\r\n        const randomImages = getRandomImages();\r\n        const randomSound = getCorrectSound(randomImages[0]);\r\n        setSelectedImage(randomImages[0]);\r\n        setGameOver(false);\r\n      };\r\n    \r\n      return (\r\n        <div className=\"game\">\r\n          {gameOver ? (\r\n            <div>\r\n              <h2>Игра окончена!</h2>\r\n              <button onClick={handleStartClick}>Начать заново</button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>Выберите картинку, соответствующую звуку:</h2>\r\n              <div className=\"images-container\">\r\n                {selectedImage && (\r\n                  <img\r\n                    src={require(`./img/${selectedImage}.png`).default}\r\n                    alt={selectedImage}\r\n                    onClick={() => handleImageClick(selectedImage)}\r\n                  />\r\n                )}\r\n                {getRandomImages().map((image, index) => (\r\n                  <img\r\n                    key={index}\r\n                    src={require(`./img/${image}.png`).default}\r\n                    alt={image}\r\n                    onClick={() => handleImageClick(image)}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div>Счет: {score}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}