{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasha\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\wc3project\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport alchemist from '../img/alchemist.png';\nimport archimag from '../img/archimag.png';\nimport blademaster from '../img/blademaster.png';\nimport bloodmage from '../img/bloodmage.png';\nimport demonhanter from '../img/demonhanter.png';\nimport drowranger from '../img/drowranger.png';\nimport flamebeard from '../img/flamebeard.png';\nimport hunters from '../img/huntres.png';\nimport troll from '../sounds/Лесной троль.mp3';\nimport Acolyte from '../sounds/Acolyte.mp3';\nimport Captain from '../sounds/Captain.mp3';\nimport Kern from '../sounds/Kern.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageInfo = [{\n  image: alchemist,\n  sound: troll\n}, {\n  image: archimag,\n  sound: Acolyte\n}, {\n  image: blademaster,\n  sound: Captain\n}, {\n  image: bloodmage,\n  sound: Kern\n}];\nconst Game = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [images, setImages] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const playGame = () => {\n    if (isGameOver) {\n      setScore(0);\n      setIsGameOver(false);\n    }\n    const randomImages = getRandomImages(4);\n    setImages(randomImages);\n    playRandomSound(randomImages);\n  };\n  const getRandomImages = count => {\n    const shuffledImages = shuffleArray(imageInfo);\n    return shuffledImages.slice(0, count);\n  };\n  const shuffleArray = array => {\n    const newArray = [...array];\n    for (let i = newArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n    }\n    return newArray;\n  };\n  const playRandomSound = randomImages => {\n    const randomIndex = Math.floor(Math.random() * randomImages.length);\n    const sound = randomImages[randomIndex].sound;\n    const audio = new Audio(sound);\n    audio.play();\n  };\n  const handleImageClick = clickedImage => {\n    const correctImage = imageInfo.find(image => image.sound === clickedImage.sound);\n    if (correctImage && correctImage.image === clickedImage.image) {\n      setScore(prevScore => prevScore + 1);\n    } else {\n      setIsGameOver(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Web Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playGame,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isGameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Over! Your score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.image,\n        alt: \"Game Image\",\n        onClick: () => handleImageClick(image)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"uI7+Fh+GPlfkJ7fwZquXP+GTk9c=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","alchemist","archimag","blademaster","bloodmage","demonhanter","drowranger","flamebeard","hunters","troll","Acolyte","Captain","Kern","jsxDEV","_jsxDEV","imageInfo","image","sound","Game","_s","score","setScore","images","setImages","isGameOver","setIsGameOver","playGame","randomImages","getRandomImages","playRandomSound","count","shuffledImages","shuffleArray","slice","array","newArray","i","length","j","Math","floor","random","randomIndex","audio","Audio","play","handleImageClick","clickedImage","correctImage","find","prevScore","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/sasha/OneDrive/Рабочий стол/wc3project/src/components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport alchemist from '../img/alchemist.png';\r\nimport archimag from '../img/archimag.png';\r\nimport blademaster from '../img/blademaster.png';\r\nimport bloodmage from '../img/bloodmage.png';\r\nimport demonhanter from '../img/demonhanter.png';\r\nimport drowranger from '../img/drowranger.png';\r\nimport flamebeard from '../img/flamebeard.png';\r\nimport hunters from '../img/huntres.png';\r\nimport troll from '../sounds/Лесной троль.mp3';\r\nimport Acolyte from '../sounds/Acolyte.mp3';\r\nimport Captain from '../sounds/Captain.mp3';\r\nimport Kern from '../sounds/Kern.mp3';\r\n\r\nconst imageInfo = [\r\n  { image: alchemist, sound: troll },\r\n  { image: archimag, sound: Acolyte },\r\n  { image: blademaster, sound: Captain },\r\n  { image: bloodmage, sound: Kern },\r\n];\r\n\r\nconst Game = () => {\r\n  const [score, setScore] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n\r\n  const playGame = () => {\r\n    if (isGameOver) {\r\n      setScore(0);\r\n      setIsGameOver(false);\r\n    }\r\n\r\n    const randomImages = getRandomImages(4);\r\n    setImages(randomImages);\r\n\r\n    playRandomSound(randomImages);\r\n  };\r\n\r\n  const getRandomImages = (count) => {\r\n    const shuffledImages = shuffleArray(imageInfo);\r\n    return shuffledImages.slice(0, count);\r\n  };\r\n\r\n  const shuffleArray = (array) => {\r\n    const newArray = [...array];\r\n    for (let i = newArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n    }\r\n    return newArray;\r\n  };\r\n\r\n  const playRandomSound = (randomImages) => {\r\n    const randomIndex = Math.floor(Math.random() * randomImages.length);\r\n    const sound = randomImages[randomIndex].sound;\r\n    const audio = new Audio(sound);\r\n    audio.play();\r\n  };\r\n\r\n  const handleImageClick = (clickedImage) => {\r\n    const correctImage = imageInfo.find(\r\n      (image) => image.sound === clickedImage.sound\r\n    );\r\n    if (correctImage && correctImage.image === clickedImage.image) {\r\n      setScore((prevScore) => prevScore + 1);\r\n    } else {\r\n      setIsGameOver(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Web Game</h1>\r\n      <button onClick={playGame}>Play</button>\r\n      <p>Score: {score}</p>\r\n      <div>\r\n        {isGameOver ? (\r\n          <p>Game Over! Your score: {score}</p>\r\n        ) : (\r\n          images.map((image, index) => (\r\n            <img\r\n              key={index}\r\n              src={image.image}\r\n              alt=\"Game Image\"\r\n              onClick={() => handleImageClick(image)}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAG,CAChB;EAAEC,KAAK,EAAEf,SAAS;EAAEgB,KAAK,EAAER;AAAM,CAAC,EAClC;EAAEO,KAAK,EAAEd,QAAQ;EAAEe,KAAK,EAAEP;AAAQ,CAAC,EACnC;EAAEM,KAAK,EAAEb,WAAW;EAAEc,KAAK,EAAEN;AAAQ,CAAC,EACtC;EAAEK,KAAK,EAAEZ,SAAS;EAAEa,KAAK,EAAEL;AAAK,CAAC,CAClC;AAED,MAAMM,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM2B,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIF,UAAU,EAAE;MACdH,QAAQ,CAAC,CAAC,CAAC;MACXI,aAAa,CAAC,KAAK,CAAC;IACtB;IAEA,MAAME,YAAY,GAAGC,eAAe,CAAC,CAAC,CAAC;IACvCL,SAAS,CAACI,YAAY,CAAC;IAEvBE,eAAe,CAACF,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMC,eAAe,GAAIE,KAAK,IAAK;IACjC,MAAMC,cAAc,GAAGC,YAAY,CAACjB,SAAS,CAAC;IAC9C,OAAOgB,cAAc,CAACE,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC;EACvC,CAAC;EAED,MAAME,YAAY,GAAIE,KAAK,IAAK;IAC9B,MAAMC,QAAQ,GAAG,CAAC,GAAGD,KAAK,CAAC;IAC3B,KAAK,IAAIE,CAAC,GAAGD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,QAAQ,CAACC,CAAC,CAAC,EAAED,QAAQ,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,QAAQ,CAACG,CAAC,CAAC,EAAEH,QAAQ,CAACC,CAAC,CAAC,CAAC;IACzD;IACA,OAAOD,QAAQ;EACjB,CAAC;EAED,MAAMN,eAAe,GAAIF,YAAY,IAAK;IACxC,MAAMe,WAAW,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGd,YAAY,CAACU,MAAM,CAAC;IACnE,MAAMpB,KAAK,GAAGU,YAAY,CAACe,WAAW,CAAC,CAACzB,KAAK;IAC7C,MAAM0B,KAAK,GAAG,IAAIC,KAAK,CAAC3B,KAAK,CAAC;IAC9B0B,KAAK,CAACE,IAAI,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,gBAAgB,GAAIC,YAAY,IAAK;IACzC,MAAMC,YAAY,GAAGjC,SAAS,CAACkC,IAAI,CAChCjC,KAAK,IAAKA,KAAK,CAACC,KAAK,KAAK8B,YAAY,CAAC9B,KAC1C,CAAC;IACD,IAAI+B,YAAY,IAAIA,YAAY,CAAChC,KAAK,KAAK+B,YAAY,CAAC/B,KAAK,EAAE;MAC7DK,QAAQ,CAAE6B,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC,CAAC,MAAM;MACLzB,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEX,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzC,OAAA;MAAQ0C,OAAO,EAAE9B,QAAS;MAAAyB,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxCzC,OAAA;MAAAqC,QAAA,GAAG,SAAO,EAAC/B,KAAK;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzC,OAAA;MAAAqC,QAAA,EACG3B,UAAU,gBACTV,OAAA;QAAAqC,QAAA,GAAG,yBAAuB,EAAC/B,KAAK;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAErCjC,MAAM,CAACmC,GAAG,CAAC,CAACzC,KAAK,EAAE0C,KAAK,kBACtB5C,OAAA;QAEE6C,GAAG,EAAE3C,KAAK,CAACA,KAAM;QACjB4C,GAAG,EAAC,YAAY;QAChBJ,OAAO,EAAEA,CAAA,KAAMV,gBAAgB,CAAC9B,KAAK;MAAE,GAHlC0C,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CAtEID,IAAI;AAAA2C,EAAA,GAAJ3C,IAAI;AAwEV,eAAeA,IAAI;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}